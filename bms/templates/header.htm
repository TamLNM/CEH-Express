<?php
global $head;
?>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
        <meta http-equiv="Cache-Control" content="max-age=3153600"/>
        <meta name="description" content=""/>
        <meta name="keywords" content=""/>
        <title><?= $action->title?></title>
        <base href="<?php echo ROOT_URL;?>" />
        <LINK REL="SHORTCUT ICON" HREF="<?=$head['logo']?>"/>
        <link href="bms/skins/style.css" rel="stylesheet" type="text/css"/>
        <link href="assets/css/custom.datatables.css" rel="stylesheet" type="text/css"/>
        <link href="assets/css/main.min.css" rel="stylesheet" type="text/css"/>
        <link href="assets/css/ro2.css" rel="stylesheet" type="text/css"/>
        <link rel="stylesheet" type="text/css" href="bms/skins/homepage/style.css">
        <link rel="stylesheet" type="text/css" href="bms/common/avim.css"/>
        <link rel="stylesheet" href="bms/skins/ThemeOffice2003/theme.css" type="text/css"/>
        <link rel="stylesheet" href="bms/common/jquery-ui.css" type="text/css">
        <link rel="stylesheet" type="text/css" href="bms/common/jquery.datetimepicker.css"/>
        <script type="text/javascript" src="bms/skins/ThemeOffice2003/theme.js"></script>
        <script language="javascript" src="bms/common/JSCookMenu.js"></script>
        <script language="javascript" src="bms/common/jquery.js"></script>
        <script src="assets/vendors/jquery/dist/jquery2-1-4.min.js"></script>

        <script language="javascript" src="bms/common/jquery.json.js"></script>
        <script language="javascript" src="bms/common/avim.js"></script>
        <script language="javascript" src="bms/common/ajax.php"></Script>
        <link href="assets/vendors/dataTables/datatables.min.css" rel="stylesheet" />
        <link href="assets/vendors/dataTables/jquery.dataTables.min.css" rel="stylesheet" />
        <link href="assets/vendors/dataTables/scroller.dataTables.min.css" rel="stylesheet" />
        <link href="assets/css/custom.datatables.css" rel="stylesheet" />
        <link href="assets/vendors/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
        <link href="assets/vendors/line-awesome/css/line-awesome.min.css" rel="stylesheet" />
        <link href="assets/vendors/themify-icons/css/themify-icons.css" rel="stylesheet" />
        <script src="assets/js/tablefilter/tablefilter.js"></script>
        <script src="assets/js/datatables.ext.js"></script>
        <script src="assets/vendors/dataTables/datatables.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/js/jquery.tablesorter.min.js"></script>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/css/theme.default.min.css" rel="stylesheet" />

        <link href="assets/vendors/dataTables/datatables.min.css" rel="stylesheet" />
        <link href="assets/vendors/dataTables/jquery.dataTables.min.css" rel="stylesheet" />
        <link href="assets/vendors/dataTables/scroller.dataTables.min.css" rel="stylesheet" />
        <link href="assets/css/custom.datatables.css" rel="stylesheet" />
        <link href="assets/vendors/toastr/toastr.min.css" rel="stylesheet" type="text/css" />
        <script src="assets/js/datatables.ext.js"></script>
        <script src="assets/vendors/dataTables/dataTables.scroller.min.js"></script>

        <!-- Datetime picker -->
        <link href="assets/vendors/datetimepicker/jquery-ui-timepicker-addon.css" rel="stylesheet" />
        <script type="text/javascript" src="assets/vendors/datetimepicker/jquery-ui-timepicker-addon.js"></script>

        <!--    TABLES SCROLL-->
        <script src="assets/vendors/dataTables/dataTables.scroller.min.js"></script>
        <script type="text/javascript" src="assets/vendors/dataTables/extensions/key_table.min.js"></script>
        <script type="text/javascript" src="assets/vendors/dataTables/extensions/mindmup-editabletable.js"></script>
        <script type="text/javascript" src="assets/vendors/dataTables/extensions/numeric-input-example.js"></script>
        <script type="text/javascript" src="assets/vendors/dataTables/extensions/autofill.min.js"></script>
        <script type="text/javascript" src="assets/vendors/dataTables/extensions/scroller.min.js"></script>
        <script type="text/javascript" src="assets/vendors/dataTables/extensions/select.min.js"></script>
        <script type="text/javascript" src="assets/vendors/dataTables/extensions/buttons.min.js"></script>

        <script src="assets/js/multiselect/jquery.slim.min.js"></script>
        <script src="assets/js/multiselect/jquery.multi-select.js"></script>

        <!-- Script -->
        <script src='assets/js/select2/select2.min.js' type='text/javascript'></script>

        <!-- CSS -->
        <link href='assets/css/select2.min.css' rel='stylesheet' type='text/css'>

        <!-- Ro2.js -->
        <script src="assets/js/ro2.js"></script>

        <script src="assets/vendors/toastr/toastr.min.js"></script>

        <style>
            .hiden-input, .hidden-input{
                display:none!important;
            }
            .text-center{
                text-align: center;
            }
            #searchcusdiv, #searchmatdiv, #searchempdiv, #serialdiv, #exceldiv, #add_address_div{
                position: absolute;
                left: 0px;
                top: 20px;
                width: 650px;
                height: 50px;
                z-index: 21;
            }
            #contenttable_wrapper .dataTables_scroll #cell-context   .dropdown-menu  .dropdown-item .sub-text,
            #contenttable_wrapper .dataTables_scroll #cell-context-2 .dropdown-menu  .dropdown-item .sub-text,
            #contenttable_wrapper .dataTables_scroll #cell-context-3 .dropdown-menu  .dropdown-item .sub-text,
            #contenttable_wrapper .dataTables_scroll #cell-context-4 .dropdown-menu  .dropdown-item .sub-text,
            #contenttable_wrapper .dataTables_scroll #cell-context-5 .dropdown-menu  .dropdown-item .sub-text{
                margin-left: 7px;
                font-size: 12px;
                font-style: italic;
            }

            .multi-select-container {
                display: inline-block;
                position: relative;
            }

            .multi-select-menu {
                position: absolute;
                left: 0;
                top: 0.8em;
                z-index: 1;
                float: left;
                min-width: 100%;
                background: #fff;
                margin: 1em 0;
                border: 1px solid #aaa;
                box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
                display: none;
            }

            .multi-select-menuitem {
                display: block;
                font-size: 0.875em;
                padding: 0.6em 1em 0.6em 30px;
                white-space: nowrap;
            }

            .multi-select-menuitem--titled:before {
                display: block;
                font-weight: bold;
                content: attr(data-group-title);
                margin: 0 0 0.25em -20px;
            }

            .multi-select-menuitem--titledsr:before {
                display: block;
                font-weight: bold;
                content: attr(data-group-title);
                border: 0;
                clip: rect(0 0 0 0);
                height: 1px;
                margin: -1px;
                overflow: hidden;
                padding: 0;
                position: absolute;
                width: 1px;
            }

            .multi-select-menuitem + .multi-select-menuitem {
                padding-top: 0;
            }

            .multi-select-presets {
                border-bottom: 1px solid #ddd;
            }

            .multi-select-menuitem input {
                position: absolute;
                margin-top: 0.1em;
                margin-left: -20px;
            }

            .multi-select-button {
                display: inline-block;
                font-size: 0.9em;
                padding: 0.2em 0.6em;
                max-width: 16em;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
                vertical-align: -0.5em;
                background-color: #fff;
                border: 1px solid #aaa;
                border-radius: 4px;
                box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
                cursor: default;
            }

            .multi-select-button:after {
                content: "";
                display: inline-block;
                width: 0;
                height: 0;
                border-style: solid;
                border-width: 0.4em 0.4em 0 0.4em;
                border-color: #999 transparent transparent transparent;
                margin-left: 0.4em;
                vertical-align: 0.1em;
            }

            .multi-select-container--open .multi-select-menu {
                display: block;
            }

            .multi-select-container--open .multi-select-button:after {
                border-width: 0 0.4em 0.4em 0.4em;
                border-color: transparent transparent #999 transparent;
            }

            .multi-select-container--positioned .multi-select-menu {
                /* Avoid border/padding on menu messing with JavaScript width calculation */
                box-sizing: border-box;
            }

            .multi-select-container--positioned .multi-select-menu label {
                /* Allow labels to line wrap when menu is artificially narrowed */
                white-space: normal;
            }
        </style>
<?php

if(@$head['notypingcp']==1) {
?>
<script language="javascript">
    document.getElementById('AVIMControl').style.display='none';
</script>
<?php
} 
if(isset($head['typingtype'])) {
?>
<script language="javascript">
    AVIMObj.setMethod(<?=$head['typingtype']?>);
</script>
<?php
}
?>        
    </head>
    <body onmousemove="move_window(event);" onmouseup="cur_div_move='no';">
<?php
include("bms/update/update.php");
?>        

<input hidden id="index"/>

<script type="text/javascript">
    function getDateTimeFormatString(d){
        year    = d.getFullYear();
        month   = d.getMonth() + 1;
        day     = d.getDate();
        hour    = d.getHours(),
        min     = d.getMinutes(),
        sec     = d.getSeconds(),
        fillMonth = '',
        fillDay   = '',
        fillHour  = '',
        fillMin   = '',
        fillSec   = '';
            
        if (month < 10)
            fillMonth = '0';
        if (day < 10)
            fillDay = '0';
        if (hour < 10)
            fillHour = '0';
        if (min < 10)
            fillMin = '0';
        if (sec < 10)
            fillSec = '0';

        return (year + '-' + fillMonth + month + '-' + fillDay + day + " " + fillHour + hour + ':' + fillMin + min + ':' + fillSec + sec);
    }

    function getDefaultTime(d){
        year    = d.getFullYear();
        month   = d.getMonth() + 1;
        day     = d.getDate();
        hour    = d.getHours(),
        min     = d.getMinutes(),
        sec     = d.getSeconds(),
        fillMonth = '',
        fillDay   = '',
        fillHour  = '',
        fillMin   = '',
        fillSec   = '';
            
        if (month < 10)
            fillMonth = '0';
        if (day < 10)
            fillDay = '0';
        if (hour < 10)
            fillHour = '0';
        if (min < 10)
            fillMin = '0';
        if (sec < 10)
            fillSec = '0';

        return (fillDay + day + '/' + fillMonth + month + '/' + year + ' ' + fillHour + hour + ':' + fillMin + min + ':' + fillSec + sec);
    }

    function getDefaultStartTime(d){
        year    = d.getFullYear();
        month   = d.getMonth() + 1;
        day     = d.getDate();
        hour    = d.getHours(),
        min     = d.getMinutes(),
        sec     = d.getSeconds(),
        fillMonth = '',
        fillDay   = '',
        fillHour  = '',
        fillMin   = '',
        fillSec   = '';
            
        if (month < 10)
            fillMonth = '0';
        if (day < 10)
            fillDay = '0';
        if (hour < 10)
            fillHour = '0';
        if (min < 10)
            fillMin = '0';
        if (sec < 10)
            fillSec = '0';

        return ('01/' + fillMonth + month + '/' + year + " 00:00:00");
    }

    function getSQLDefaultStartTime(d){
        year    = d.getFullYear();
        month   = d.getMonth() + 1;
        day     = d.getDate();
        hour    = d.getHours(),
        min     = d.getMinutes(),
        sec     = d.getSeconds(),
        fillMonth = '',
        fillDay   = '',
        fillHour  = '',
        fillMin   = '',
        fillSec   = '';
            
        if (month < 10)
            fillMonth = '0';
        if (day < 10)
            fillDay = '0';
        if (hour < 10)
            fillHour = '0';
        if (min < 10)
            fillMin = '0';
        if (sec < 10)
            fillSec = '0';

        return (year + '-' + fillMonth + month + '-01' + " 00:00:00");
    }


    function getDefaultFinishTime(d){
        year    = d.getFullYear();
        month   = d.getMonth() + 1;
        day     = d.getDate();
        hour    = d.getHours(),
        min     = d.getMinutes(),
        sec     = d.getSeconds(),
        fillMonth = '',
        fillDay   = '',
        fillHour  = '',
        fillMin   = '',
        fillSec   = '';
            
        if (month < 10)
            fillMonth = '0';
        if (day < 10)
            fillDay = '0';
        if (hour < 10)
            fillHour = '0';
        if (min < 10)
            fillMin = '0';
        if (sec < 10)
            fillSec = '0';

        switch(month){
            case 1: case 3: case 5: case 7: case 8: case 10: case 12:
                day = 31;
                break;
            case 2:
                if (year % 400 == 0 || (year % 4 == 0 && year % 100 != 0)){
                    day = 29;
                }
                else{
                    day = 28;
                }
                break;
            default:
                day = 30;
                break;
        }
        return (day + '/' + fillMonth + month + '/' + year + " 23:59:59");
    }

    function getSQLDefaultFinishTime(d){
        year    = d.getFullYear();
        month   = d.getMonth() + 1;
        day     = d.getDate();
        hour    = d.getHours(),
        min     = d.getMinutes(),
        sec     = d.getSeconds(),
        fillMonth = '',
        fillDay   = '',
        fillHour  = '',
        fillMin   = '',
        fillSec   = '';
            
        if (month < 10)
            fillMonth = '0';
        if (day < 10)
            fillDay = '0';
        if (hour < 10)
            fillHour = '0';
        if (min < 10)
            fillMin = '0';
        if (sec < 10)
            fillSec = '0';

        switch(month){
            case 1: case 3: case 5: case 7: case 8: case 10: case 12:
                day = 31;
                break;
            case 2:
                if (year % 400 == 0 || (year % 4 == 0 && year % 100 != 0)){
                    day = 29;
                }
                else{
                    day = 28;
                }
                break;
            default:
                day = 30;
                break;
        }
        return (year + '-' + fillMonth + month + '-' + day + " 23:59:59");
    }

    function covertToSQLDefaultFinishTime(d){
        return (d.substring(6,10) + '-' + d.substring(3,5) + '-' + d.substring(0, 2) + d.substring(10, d.length));
    }

    function covertToSQLDateTime(d){
        return (d.substring(6,10) + '-' + d.substring(3,5) + '-' + d.substring(0, 2) + d.substring(10, d.length));
    }

    $(document).on('click', '#btnAdd', function(){
        var tbl = $('#contenttable');

        if ($('#table_name').val() == 'tariff'){
            if (!($('#s_name').val())){
                toastr['error']('Vui lòng nhập Tên khách gửi!');
                return;
            }

            if (!($('#s_tel').val())){
                toastr['error']('Vui lòng nhập Số điện thoại gửi hàng!');
                return;
            }

            if (!($('#s_email').val())){
                toastr['error']('Vui lòng nhập thông tin Email khách gửi hàng!');
                return;
            }

            if (!($('#s_address').val())){
                toastr['error']('Vui lòng nhập Địa chỉ gửi hàng!');
                return;
            }

            if (!($('#r_name').val())){
                toastr['error']('Vui lòng bổ sung thông tin Khách nhận hàng: Họ tên khách!');
                return;
            }

            if (!($('#r_tel').val())){
                toastr['error']('Vui lòng bổ sung thông tin Khách nhận hàng: Số điện thoại!');
                return;
            }

            if (!($('#r_address').val())){
                toastr['error']('Vui lòng bổ sung thông tin Khách nhận hàng: Địa chỉ!');
                return;
            }

            //if (!($('#r_nation option:selected').val())){
            if (!($('#r_nation').val())){
                toastr['error']('Vui lòng bổ sung thông tin Khách nhận hàng: Quốc gia!');
                return;
            }

            //if (!($('#r_city option:selected').val())){
            if (!($('#r_city').val())){
                toastr['error']('Vui lòng bổ sung thông tin Khách nhận hàng: Thành phố!');
                return;
            }
        }

        if ($('#table_name').val() == 'tariff_confirm'){
            if (!($('#order_id').val())){
                toastr['error']('Vui lòng chọn Order!');
                return;
            }
        }

        if ($('#table_name').val() == 'contract'){            
            return;
        }

        blurUIBelow();
        showAddPopup();
    });

    function blurUIBelow(){
        $('#div_title_page').css({'filter': 'blur(1.5px)'});
        $('#div_contenttable').css({'filter': 'blur(1.5px)'});
    }
    
    var cur_div='no';
    function showdiv(d, bonusStr){
        var l = ($(window).width() - $('#' + d + 'div').width()) / 2;
        if (document.getElementById(d + 'head' + bonusStr))
            document.getElementById(d + 'head' + bonusStr).style.backgroundImage = 'url(bms/images/head_bg.gif)';
        document.getElementById(d + 'div' + bonusStr).style.display = 'block';
        document.getElementById(d + 'iframe' + bonusStr).style.display = 'block';
        if (cur_div != d) {
            if (cur_div != 'no') {
                if (document.getElementById(cur_div + 'head' + bonusStr))
                    document.getElementById(cur_div + 'head' + bonusStr).style.backgroundImage = 'url(bms/images/head_bg_dis.gif)';
                document.getElementById(cur_div + 'div' + bonusStr).style.zIndex = cur_index;
                document.getElementById(cur_div + 'iframe' + bonusStr).style.zIndex = cur_index - 1;
            }
            if (document.getElementById(d + 'head' + bonusStr))
                document.getElementById(d + 'head' + bonusStr).style.backgroundImage = 'url(bms/images/head_bg.gif)';
            document.getElementById(d + 'div' + bonusStr).style.zIndex = 52;
            document.getElementById(d + 'iframe' + bonusStr).style.zIndex = 51;
        }
        cur_div = d;
        cur_div_move = 'no';
        $('#' + d + 'head' + bonusStr).css({'display': 'none'});
        $('#' + d + 'iframe' + bonusStr).css({'display': 'none'});
    }

    function showAddPopup(){
        document.getElementById('searchempdiv').style.top = 250;
        document.getElementById('searchempiframe').style.top = 250;
        document.getElementById('searchempdiv').style.left=(screen.width-1000)/2+150;
        document.getElementById('searchempiframe').style.left=(screen.width-1000)/2+150;
        showdiv('searchemp', '');
    }

    function removeBlurUIBelow(){
        $('#div_title_page').css({'filter': 'none'});
        $('#div_contenttable').css({'filter': 'none'});
        $('#searchempiframe').css({'display': 'none'});
        $('#searchempdiv').css({'display': 'none'});
        $('#add_address_iframe').css({'display': 'none'});
        $('#add_address_div').css({'display': 'none'});
        $('#warehouse_iframe').css({'display': 'none'});
        $('#warehouse_div').css({'display': 'none'});
    } 

    $(document).on('click', '.addAddress', function(){
        $('#index').val($('.addAddress').index(this));

        blurUIBelow();
        document.getElementById('add_address_div').style.top = 50;
        document.getElementById('add_address_iframe').style.top = 250;
        document.getElementById('add_address_div').style.left=(screen.width-1000)/2+150;
        document.getElementById('add_address_iframe').style.left=(screen.width-1000)/2+150;
        showdiv('add_address_', '');
    });

    $(document).on('click', '.addShippingAddress', function(){
        $('#index').val($('.addShippingAddress').index(this));

        blurUIBelow();
        document.getElementById('add_address_div').style.top = 50;
        document.getElementById('add_address_iframe').style.top = 250;
        document.getElementById('add_address_div').style.left=(screen.width-1000)/2+150;
        document.getElementById('add_address_iframe').style.left=(screen.width-1000)/2+150;
        showdiv('add_address_', '');
    });

    $(document).on('click', '#btnChooseWarehouse', function(){
        /*
        blurUIBelow();
        document.getElementById('warehouse_div').style.top = 50;
        document.getElementById('warehouse_iframe').style.top = 250;
        document.getElementById('warehouse_div').style.left=(screen.width-1000)/2+100;
        document.getElementById('warehouse_iframe').style.left=(screen.width-1000)/2+150;
        showdiv('warehouse_', '');
        */

        blurUIBelow();
        document.getElementById('searchempdiv').style.top = 50;
        document.getElementById('searchempiframe').style.top = 200;
        document.getElementById('searchempdiv').style.left=(screen.width-1000)/2+150;
        document.getElementById('searchempiframe').style.left=(screen.width-1000)/2+150;
        showdiv('searchemp', '');
        $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
    });

    $(document).on('click', '#btnSave', function(){
        var tbl         = $('#contenttable');
            tableName   = $('#table_name').val(),
            newData     = tbl.getAddNewData(),
            editData    = tbl.getEditData(),
            checkEList  = [],
            elementIDDeleteInAdding      = [],
            elementCodeCheckListInAdding = [],
            elementInsertingList         = [];

        if (tableName == 'contract'){
            return;
        }
        
        if (newData.length == 0 && editData.length == 0){
            alert('Không có dữ liệu Thêm mới/ Chỉnh sửa!');
            return;
        }

        if (tableName != 'tariff'){
            switch (tableName){
            case "currency":
                checkEList                   = ['currency_code', 'currency_name'];
                // Data for INSERT
                elementIDDeleteInAdding      = ['currency_id']; // NULL ID need removed
                elementCodeCheckListInAdding = ['currency_code']; // Element Code need checked the same
                elementInsertingList         = ['currency_code', 'currency_name']; // List inserting element
                // Data for EDIT
                elementIDInEditing           = ['currency_id']; // Element Code need check to Update
                elementEditingList           = ['currency_code', 'currency_name']; // List editing element
                break;     
            case "nation":
                checkEList                   = ['nation_code', 'nation_name'];
                // Data for INSERT
                elementIDDeleteInAdding      = ['nation_id']; // NULL ID need removed
                elementCodeCheckListInAdding = ['nation_code']; // Element Code need checked the same
                elementInsertingList         = ['nation_code', 'nation_name']; // List inserting element
                // Data for EDIT
                elementIDInEditing           = ['nation_id']; // Element Code need check to Update
                elementEditingList           = ['nation_code', 'nation_name']; // List editing element
                break;                
            case "warehouse_type":
                checkEList                   = ['warehouse_type_code', 'warehouse_type_name'];
                // Data for INSERT
                elementIDDeleteInAdding      = ['warehouse_type_id']; // NULL ID need removed
                elementCodeCheckListInAdding = ['warehouse_type_code']; // Element Code need checked the same
                elementInsertingList         = ['warehouse_type_code', 'warehouse_type_name']; // List inserting element
                // Data for EDIT
                elementIDInEditing           = ['warehouse_type_id']; // Element Code need check to Update
                elementEditingList           = ['warehouse_type_code', 'warehouse_type_name']; // List editing element
                break;                
            case "warehouse":
                checkEList                   = ['warehouse_code', 'warehouse_name', 'nation_id', 'city_id', 'district_id'];
                // Data for INSERT
                elementIDDeleteInAdding      = ['warehouse_id']; // NULL ID need removed
                elementCodeCheckListInAdding = ['warehouse_name', 'nation_id', 'city_id', 'district_id']; // Element Code need checked the same
                elementInsertingList         = [ 'warehouse_type_name', 'warehouse_code', 'warehouse_name', 'nation_name', 'nation_id', 'nation_code', 'city_name', 'city_id', 'city_code', 'district_name', 'district_id', 'district_code', 'address', 'warehouse_type_id', 'warehouse_type_code']; // List inserting element
                // Data for EDIT
                elementIDInEditing           = ['warehouse_id']; // Element Code need check to Update
                elementEditingList           = ['warehouse_type_name', 'warehouse_code', 'warehouse_name', 'nation_name', 'nation_id', 'nation_code', 'city_name', 'city_id', 'city_code', 'district_name', 'district_id', 'district_code', 'address', 'warehouse_type_id', 'warehouse_type_code']; // List editing element
                break;
            case "stock_type":
                checkEList                   = ['stock_type_code', 'stock_type_name', 'warehouse_id'];
                // Data for INSERT
                elementIDDeleteInAdding      = ['stock_type_id']; // NULL ID need removed
                elementCodeCheckListInAdding = ['stock_type_code']; // Element Code need checked the same
                elementInsertingList         = ['stock_type_code', 'stock_type_name', 'warehouse_id', 'warehouse_code', 'warehouse_name', 'currency_id', 'currency_code', 'currency_name', 'expense', 'expense_type', 'unit_id', 'unit_code', 'unit_name']; // List inserting element
                // Data for EDIT
                elementIDInEditing           = ['stock_type_id']; // Element Code need check to Update
                elementEditingList           = ['stock_type_code', 'stock_type_name', 'warehouse_id', 'warehouse_code', 'warehouse_name', 'currency_id', 'currency_code', 'currency_name', 'expense', 'expense_type', 'unit_id', 'unit_code', 'unit_name']; // List editing element
                break;
            case "stock":
                checkEList                   = ['stock_code', 'stock_name', 'stock_type_id'];
                // Data for INSERT
                elementIDDeleteInAdding      = ['stock_id']; // NULL ID need removed
                elementCodeCheckListInAdding = ['stock_code']; // Element Code need checked the same
                elementInsertingList         = ['stock_type_name', 'stock_code', 'stock_name', 'warehouse_name', 'price', 'stock_type_id', 'stock_type_code', 'warehouse_id', 'warehouse_code', 'nation_id', 'nation_code', 'nation_name', 'city_id', 'city_code', 'city_name', 'district_id', 'district_code', 'district_name']; // List inserting element
                // Data for EDIT
                elementIDInEditing           = ['stock_id']; // Element Code need check to Update
                elementEditingList           = ['stock_type_name', 'stock_code', 'stock_name', 'warehouse_name', 'price', 'stock_type_id', 'stock_type_code', 'warehouse_id', 'warehouse_code', 'nation_id', 'nation_code', 'nation_name', 'city_id', 'city_code', 'city_name', 'district_id', 'district_code', 'district_name']; // List editing element
                break;
            case "city":
                checkEList                   = ['city_code', 'city_name', 'nation_id'];
                // Data for INSERT
                elementIDDeleteInAdding      = ['city_id']; // NULL ID need removed
                elementCodeCheckListInAdding = ['city_code']; // Element Code need checked the same
                elementInsertingList         = ['city_code', 'city_name', 'nation_id', 'nation_code', 'nation_name']; // List inserting element
                // Data for EDIT
                elementIDInEditing           = ['city_id']; // Element Code need check to Update
                elementEditingList           = ['city_code', 'city_name', 'nation_id', 'nation_code', 'nation_name']; // List editing element 
                break;
            case "district":
                checkEList                   = ['district_code', 'district_name', 'nation_id', 'city_id'];
                // Data for INSERT
                elementIDDeleteInAdding      = ['district_id']; // NULL ID need removed
                elementCodeCheckListInAdding = ['district_code']; // Element Code need checked the same
                elementInsertingList         = ['district_code', 'district_name', 'city_id', 'city_code', 'city_name', 'nation_id', 'nation_code', 'nation_name']; // List inserting element
                // Data for EDIT
                elementIDInEditing           = ['district_id']; // Element Code need check to Update
                elementEditingList           = ['district_code', 'district_name', 'city_id', 'city_code', 'city_name', 'nation_id', 'nation_code']; // List editing element 
                break;
            case "transport_company":
                checkEList                   = ['trs_comp_code', 'trs_comp_name', 'nation_id', 'city_id', 'district_id'];
                // Data for INSERT
                elementIDDeleteInAdding      = ['trs_comp_id']; // NULL ID need removed
                elementCodeCheckListInAdding = ['trs_comp_code']; // Element Code need checked the same
                elementInsertingList         = [ 'trs_comp_code', 'trs_comp_name', 'nation_name', 'nation_id', 'nation_code', 'city_name', 'city_id', 'city_code', 'district_name', 'district_id', 'district_code', 'address', 'tel', 'email', 'website']; // List inserting element
                // Data for EDIT
                elementIDInEditing           = ['trs_comp_id']; // Element Code need check to Update
                elementEditingList           = ['trs_comp_code', 'trs_comp_name', 'nation_name', 'nation_id', 'nation_code', 'city_name', 'city_id', 'city_code', 'district_name', 'district_id', 'district_code', 'address', 'tel', 'email', 'website']; // List editing element 
                break;
            case "customer_type":
                checkEList                   = ['cus_type_code', 'cus_type_name'];
                // Data for INSERT
                elementIDDeleteInAdding      = ['cus_type_id']; // NULL ID need removed
                elementCodeCheckListInAdding = ['cus_type_code']; // Element Code need checked the same
                elementInsertingList         = ['cus_type_code', 'cus_type_name']; // List inserting element
                // Data for EDIT
                elementIDInEditing           = ['cus_type_id']; // Element Code need check to Update
                elementEditingList           = ['cus_type_code', 'cus_type_name']; // List editing element
                break;
            case "customer":
                checkEList                   = ['cus_code', 'cus_name'];
                // Data for INSERT
                elementIDDeleteInAdding      = ['cus_id']; // NULL ID need removed
                elementCodeCheckListInAdding = ['cus_code']; // Element Code need checked the same
                elementInsertingList         = ['cus_type_name', 'cus_type_id', 'cus_type_code', 'cus_code', 'cus_name', 'tel', 'email', 'nation_name', 'nation_id', 'nation_code', 'city_name', 'city_id', 'city_code', 'district_name', 'district_id', 'district_code', 'address', 'shipping_address', 'tax_no', 'fax', 'bank_acc', 'bank_name', 'representative', 'representative_position', 'representative_tel', 'debt', 'max_debt', 'remark']; // List inserting element
                // Data for EDIT
                elementIDInEditing           = ['cus_id']; // Element Code need check to Update
                elementEditingList           = ['cus_type_name', 'cus_type_id', 'cus_type_code', 'cus_code', 'cus_name', 'tel', 'email', 'nation_name', 'nation_id', 'nation_code', 'city_name', 'city_id', 'city_code', 'district_name', 'district_id', 'district_code', 'address', 'shipping_address', 'tax_no', 'fax', 'bank_acc', 'bank_name', 'representative', 'representative_position', 'representative_tel', 'debt', 'max_debt', 'remark']; // List editing element
                break;
            case "trf_transport": 
                checkEList                   = ['trf_trs_code', 'trf_trs_name', 'warehouse_id_dep', 'warehouse_id_des'];
                // Data for INSERT
                elementIDDeleteInAdding      = ['trf_trs_id']; // NULL ID need removed
                elementCodeCheckListInAdding = ['trf_trs_code']; // Element Code need checked the same
                elementInsertingList         = ['trf_trs_code', 'trf_trs_name', 'warehouse_id_dep', 'warehouse_code_dep', 'warehouse_name_dep', 'warehouse_id_des', 'warehouse_code_des', 'warehouse_name_des', 'currency_id', 'currency_code', 'currency_name', 'vat', 'include_vat', 'air_freight_rates', 'sea_freight_rates', 'road_freight_rates', 'iron_freight_rates']; // List inserting element
                // Data for EDIT
                elementIDInEditing           = ['trf_trs_id']; // Element Code need check to Update
                elementEditingList           = ['trf_trs_code', 'trf_trs_name', 'warehouse_id_dep', 'warehouse_code_dep', 'warehouse_name_dep', 'warehouse_id_des', 'warehouse_code_des', 'warehouse_name_des', 'currency_id', 'currency_code', 'currency_name', 'vat', 'include_vat', 'air_freight_rates', 'sea_freight_rates', 'road_freight_rates', 'iron_freight_rates']; // List editing element
                break;
            case "unit":
                checkEList                   = ['unit_code', 'unit_name'];
                // Data for INSERT
                elementIDDeleteInAdding      = ['unit_id']; // NULL ID need removed
                elementCodeCheckListInAdding = ['unit_code']; // Element Code need checked the same
                elementInsertingList         = ['unit_code', 'unit_name']; // List inserting element
                // Data for EDIT
                elementIDInEditing           = ['unit_id']; // Element Code need check to Update
                elementEditingList           = ['unit_code', 'unit_name']; // List editing element 
                break;
            default:
                    break;
            }

            saveData(newData, editData, checkEList, tableName, elementIDDeleteInAdding, elementCodeCheckListInAdding, elementInsertingList, elementIDInEditing, elementEditingList);
        }
        else{
            if (!($('#s_nation').val()) || !($('#s_city').val())){
                alert('Vui lòng chọn thông tin Kho gửi!');
                return;
            }
            
            if (!($('#r_nation').val()) || !($('#r_city').val())){
                alert('Vui lòng chọn thông tin Kho nhận!');
                return;
            }

            var d = getDateTimeFormatString(new Date());

            var ORDTariffData = [{  
                    'ord_trf_code'          : $('#order_code').val(),
                    'sender_id'             : $('#s_id').val(),
                    'sender_name'           : $('#s_name').val(),
                    'sender_tel'            : $('#s_tel').val(),
                    'sender_email'          : $('#s_email').val(),
                    'sender_address'        : $('#s_address').val(),
                    'receiver_name'         : $('#r_name').val(),
                    'receiver_tel'          : $('#r_tel').val(),
                    'receiver_email'        : $('#r_email').val(),
                    'receiver_address'      : $('#r_address').val(),
                    'warehouse_id_dep'      : $('#warehouse_id_dep').val(),
                    'warehouse_code_dep'    : $('#warehouse_code_dep').val(),
                    'warehouse_name_dep'    : $('#warehouse_name_dep').val(),
                    'warehouse_id_des'      : $('#warehouse_id_des').val(),
                    'warehouse_code_des'    : $('#warehouse_code_des').val(),
                    'warehouse_name_des'    : $('#warehouse_name_des').val(),
                    'status'                : 'KT',
                    'nation_id'             : $('#r_nation').val(),
                    'nation_code'           : $('#r_nation').attr('attrX'),
                    'nation_name'           : $('#r_nation').attr('attrY'),
                    'city_id'               : $('#r_city').val(),
                    'city_code'             : $('#r_city').attr('attrX'),
                    'city_name'             : $('#r_city').attr('attrY'),
                    'remark'                : $('#remark').val(),
                    'order_time'            : d,
                    'ordered_by'            : <?="'".$_SESSION['user_name']."'";?>,
                    'create_time'           : d,
                    'created_by'            : <?="'".$_SESSION['user_name']."'";?>,
                    'update_time'           : d,
                    'updated_by'            : <?="'".$_SESSION['user_name']."'";?>,
                }],
                ORDTariffDetailsData = [];

            var cusData = [
                    {
                        'cus_name'      : $('#s_name').val(),
                        'email'         : $('#s_email').val(),
                        'tel'           : $('#s_tel').val(),
                        'address'       : $('#s_address').val(),
                    },
                    {
                        'cus_name'      : $('#r_name').val(),
                        'email'         : $('#r_email').val(),
                        'tel'           : $('#r_tel').val(),
                        'address'       : $('#r_address').val(),
                    }
                ];

            for (i = 0; i < newData.length; i++){
                ORDTariffDetailsData.push({
                    'ord_trf_code'          : $('#order_code').val(),
                    'stock_type_id'         : newData[i]['stock_type_id'],
                    'stock_type_code'       : newData[i]['stock_type_code'],
                    'stock_type_name'       : newData[i]['stock_type_name'],
                    'stock_type_details'    : newData[i]['stock_type_details'],
                    'numeric'               : newData[i]['numeric'],
                    'stock_weight'          : newData[i]['stock_weight'],
                    'unit_id'               : newData[i]['unit_id'],
                    'unit_code'             : newData[i]['unit_code'],
                    'unit_name'             : newData[i]['unit_name'],
                    'price'                 : newData[i]['price'],
                    'expense_type'          : newData[i]['expense_type'],
                    'currency_id'           : newData[i]['currency_id'],
                    'currency_code'         : newData[i]['currency_code'],
                    'currency_name'         : newData[i]['currency_name'],
                    'rates'                 : newData[i]['rates'],
                    'include_vat'           : $('#include_vat').val()   ,
                    'vat_rates'             : newData[i]['vat_rates'],
                    'expense'               : newData[i]['expense'],
                    'total_money'           : newData[i]['shipping_cost'],
                    'remark'                : newData[i]['remark'],
                    'create_time'           : d,
                    'created_by'            : <?="'".$_SESSION['user_name']."'";?>,
                    'update_time'           : d,
                    'updated_by'            : <?="'".$_SESSION['user_name']."'";?>,
                });
            }  
            saveORDTariffData(ORDTariffData, ORDTariffDetailsData, cusData);
        }
    });

    function saveData(newData, editData, checkEList, tableName, elementIDDeleteInAdding, elementCodeCheckListInAdding, elementInsertingList, elementIDInEditing, elementEditingList){
        if (newData.length > 0){
            for (i = 0; i < newData.length; i++){
                var checkFlag = true;
                for (j = 0; j < checkEList.length; j++){
                    if (newData[i][checkEList[j]] != ''){
                        checkFlag = false;
                        j = checkEList.length;
                    }
                }
                if (checkFlag){
                    alert('Vui lòng nhập đầy đủ các thông tin cần thêm!');
                    return;
                }

                for (j = 0; j < elementIDDeleteInAdding.length; j++){
                    delete (newData[i][elementIDDeleteInAdding[j]]);
                }

                newData[i].checkQuery = '';
                for (j = 0; j < elementCodeCheckListInAdding.length; j++){
                    if (j > 0){
                        newData[i].checkQuery += ' and ';
                    }
                    newData[i].checkQuery += (' ' + elementCodeCheckListInAdding[j] + " = '" + newData[i][elementCodeCheckListInAdding[j]] + "' ");
                }

                var tempStr = ' values';
                newData[i].insertQuery = ' insert into ' + tableName;
                newData[i].insertQuery += ('(' + elementInsertingList[0]);
                tempStr                += ("('" + newData[i][elementInsertingList[0]]);
                for (j = 1; j < elementInsertingList.length - 1; j++){
                    newData[i].insertQuery += (', ' + elementInsertingList[j]);
                    tempStr += ("', '" + newData[i][elementInsertingList[j]]);
                }                
                newData[i].insertQuery += (', ' + elementInsertingList[elementInsertingList.length - 1] + ')');
                tempStr += ("', '" + newData[i][elementInsertingList[elementInsertingList.length - 1]] + "')");
                newData[i].insertQuery += tempStr;
            }

            var fnew = {
                'action': 'add',
                'data': newData,
                'table_name': tableName,
            };
            postSave(fnew);
        }

        if (editData.length > 0){
            for (i = 0; i < editData.length; i++){
                var checkFlag = true;
                for (j = 0; j < checkEList.length; j++){
                    if (editData[i][checkEList[j]] != ''){
                        checkFlag = false;
                        j = checkEList.length;
                    }
                }
                if (checkFlag){
                    alert('Vui lòng nhập đầy đủ các thông tin cần thêm!');
                    return;
                }

                editData[i].editQuery = 'update ' + tableName + ' set ';
                editData[i].editQuery += (elementEditingList[0] + " ='" + editData[i][elementEditingList[0]]);
                for (j = 1; j < elementEditingList.length - 1; j++){
                    editData[i].editQuery += ("', " + elementEditingList[j] + " ='" + editData[i][elementEditingList[j]]);
                }
                editData[i].editQuery += ("', " + elementEditingList[elementEditingList.length - 1] + " ='" + editData[i][elementEditingList[elementEditingList.length - 1]] + "'");
                editData[i].editQuery += (' where ' + elementIDInEditing[0] + " ='" + editData[i][elementIDInEditing[0]] + "' ");
                for (j = 1; j < elementIDInEditing.length; j++){
                    editData += ("' and " + elementIDInEditing[j] + " =' " + editData[i][elementIDInEditing[j]] + "'");
                }                        
            }

            var fedit = {
                'action': 'edit',
                'data': editData,
                'table_name': tableName,
            };
            postSave(fedit);
        }
    }

    function saveORDTariffData(ORDTariffData, ORDTariffDetailsData, cusData){
                var cusFormData = {
                        'action': 'add',
                        'data': cusData,
                    }; 

                
                $.ajax({
                    url: "?eda_act=<?=md5('tariff')?>&eda_code=<?= md5('add_cus_by_trf')?>",
                    dataType: 'json',
                    data: cusFormData,
                    type: 'POST',
                    success: function (data) {
                        if(data.deny) {
                            toastr["error"](data.deny);
                            return;
                        }

                        toastr['success']('Thêm thông tin khách hàng thành công!');
                        rIdx++;
                        
                        var formData = {
                                'action': 'add',
                                'data'  : ORDTariffData,
                            },
                            rIdx = 0;
                       
                        $.ajax({
                            url: "?eda_act=<?=md5('tariff')?>&eda_code=<?= md5('add_ord_tariff_data')?>",
                            dataType: 'json',
                            data: formData,
                            type: 'POST',
                            success: function (data) {
                                if(data.deny) {
                                    toastr["error"](data.deny);
                                    return;
                                }

                                toastr['success']('Thêm Order thành công');                                
                                rIdx++;
                                var formData = {
                                        'aciton': 'add',
                                        'data'  : ORDTariffDetailsData,
                                    };

                                $.ajax({
                                    url: "?eda_act=<?=md5('tariff')?>&eda_code=<?= md5('add_ord_tariff_details_data')?>",
                                    dataType: 'json',
                                    data: formData,
                                    type: 'POST',
                                    success: function (data) {
                                        if(data.deny) {
                                            toastr["error"](data.deny);
                                            return;
                                        }

                                        toastr['success']('Thêm thông tin chi tiết order thành công');

                                        rIdx++;                                        
                                        if (rIdx == 2){
                                            location.reload();
                                        }
                                        return;
                                    },
                                    error: function(err){
                                        alert("Error!");
                                        console.log(err);
                                    }
                                });
                                if (rIdx == 2){
                                    location.reload();
                                }

                                
                            },
                            error: function(err){
                                alert("Error!");
                                console.log(err);
                            }
                        });
                    },
                    
                    error: function(err){
                        alert("Error!");
                        console.log(err);
                    }
                });        
    }

    function postSave(formData){
        var tbl = $('#contenttable');

        $.ajax({
            url: "?eda_act=<?=md5('general')?>&eda_code=<?= md5('add_and_edit_data')?>",
            dataType: 'json',
            data: formData,
            type: 'POST',
            success: function (data) {
                if(data.deny) {
                    toastr["error"](data.deny);
                    return;
                }

                if(formData.action == 'edit'){
                    alert("Cập nhật thành công!");
                    tbl.DataTable().rows( '.editing' ).nodes().to$().removeClass("editing");
                    location.reload();
                }

                if(formData.action == 'add'){
                    alert("Thêm mới thành công!");
                    tbl.DataTable().rows( '.addnew' ).nodes().to$().removeClass("addnew");
                    location.reload();
                }

                saveBtn.button('reset');
                $('.ibox.collapsible-box').unblock();
            },
            error: function(err){
                alert("Error!");
                console.log(err);
            }
        });
    }

    $(document).on('click', '#btnDelete', function(){
        var tbl = $('#contenttable');

        if ($('#table_name').val() == 'contract'){
            return;
        }
        
        if($("#contenttable").getSelectedRows().length == 0){
            $('.toast').remove();
            alert("[LỖI] Vui lòng chọn các dòng dữ liệu để xóa!");
        }
        else{
            //$("#contenttable").DataTable().rows(".selected").remove().draw(false);      
            if (tbl.getSelectedRows().data().length > 0){
                var data = tbl.getSelectedRows().data();
                postDel(data);
            }
        }
    });   

    function postDel(data){
        var delIDList     = [],
            tableName     = $('#table_name').val(),
            delQueryList  = [],
            id;

        switch (tableName){
            case 'currency': 
                id = 'currency_id';
                break;
            case 'nation':
                id = 'nation_id';
                break;
            case 'city':
                id = 'city_id';
                break;
            case 'district':
                id = 'district_id';
                break;
            case 'warehouse_type':
                id = 'warehouse_type_id';
                break;
            case 'warehouse':
                id = 'warehouse_id';
                break;
            case 'stock_type':
                id = 'stock_type_id';
                break;
            case 'stock':
                id = 'stock_id';
                break;
            case 'customer_type':
                id = 'cus_type_id';
                break;
            case 'customer':
                id = 'cus_id';
                break;
            case 'trf_transport':
                id = 'trf_trs_id';
                break;
            default:
                break;
        }

        for (i = 0; i < data.length; i++){
            delQueryList.push('delete from ' + tableName + ' where ' + id + " = '" + data[i][1] + "'");
        }


        var fdel = {
                'action': 'delete',
                'data': delQueryList,
            };

        $.ajax({
                url: "?eda_act=<?=md5('general')?>&eda_code=<?= md5('delete_data')?>",
                dataType: 'json',
                data: fdel,
                type: 'POST',
                success: function (data) {
                    var data = data.result;
                    if(data.error && data.error.length > 0){
                        alert('Xóa dữ liệu thất bại!');
                    }

                    if(data.success && data.success.length > 0){
                        alert('Xóa dữ liệu thành công');
                        location.reload();
                    }

                },
                error: function(err){
                    alert("Error!");
                    console.log(err);
                }
            });
    }

    function chooseAddRow(){
        removeBlurUIBelow();
        
        var tbl = $('#contenttable'),
            numRows = parseInt($('#rowsNumeric').val()),
            sumNumRows = 0;

        if ($('#table_name').val() == 'tariff_confirm'){
            tbl = $('#contenttable_order_confirm');
        }

        sumNumRows += numRows;
        if (numRows == 1){
            tbl.newRow();
            rowsExist = tbl.DataTable().rows().nodes().length;
            for (i = 0; i < rowsExist; i++){
                cell = tbl.find("tbody tr:eq(" + i + ") td:eq(0)");
                tbl.DataTable().cell(cell).data(i+1).draw(false);
            }
        }
        else{
            numRowsExist = tbl.DataTable().rows().nodes().length;
            numRowHasAddNewClass = 0;
            index = 1;
            for (i = numRowsExist - 1; i >= 0 ; i--){

                var crRow = tbl.find("tbody tr:eq(" + i + ")");
                if (crRow.hasClass("addnew")){
                    numRowHasAddNewClass++;
                    cell = tbl.find("tbody tr:eq(" + i + ") td:eq(0)");
                    tbl.DataTable().cell(cell).data(sumNumRows + (index++)).draw(false);
                }
                else{
                    cell = tbl.find("tbody tr:eq(" + i + ") td:eq(0)");
                    tbl.DataTable().cell(cell).data(sumNumRows + (index++)).draw(false);
                }
            }
            tbl.newMoreRows(numRows, numRowHasAddNewClass);
        }

        setValurForORDTariff();      
    }

    function setValurForORDTariff(){
        /* Set value in ORD_TARIFF screen */
        if ($('#table_name').val() == 'tariff' || $('#table_name').val() == 'tariff_confirm'){
            var tbl = $('#contenttable');

            if ($('#table_name').val() == 'tariff'){
                //tbl.DataTable().row.add( $('<tr><td style="display: none">zzz</td>' + '<td style="display: none"></td>' + '<td style="display: none"></td>' + '<td style="display: none"></td>' + '<td style="display: none"></td>' + '<td style="display: none"></td>' + '<td colspan="3" style="text-align: right; font-weight: bolder; color: red; font-style: italic;">TỔNG CỘNG</td>' + '<td style="text-align: center; font-weight: bolder; color: red; font-style: italic;"><span id="sumOfNumeric">0</span></td>' + '<td style="display: none"></td>' + '<td style="display: none"></td>' + '<td style="text-align: center; font-weight: bolder; color: red; font-style: italic;"><span id="sumOfTotalWeight">0</span> (kg)</td>' + '<td style="display: none"></td>' + '<td style="display: none"></td>' + '<td style="display: none"></td>' + '<td style="display: none"></td>' + '<td colspan="3"></td>' + '<td style="text-align: center; font-weight: bolder; color: red; font-style: italic;"><span id="sumOfRates">0</span><span id="currency_name1"></span></td>' + '<td style="text-align: center; font-weight: bolder; color: red; font-style: italic;"><span id="sumOfExpense">0</span><span id="currency_name2"></span></td>' + '<td style="text-align: center; font-weight: bolder; color: red; font-style: italic;"><span id="sumOfTotalMoney">0</span><span id="currency_name3"></span></td>' + '<td></td></tr>')[0]).draw(false);
                
            }

            if ($('#table_name').val() == 'tariff_confirm'){
                tbl = $('#contenttable_order_confirm');

                var rowNumeric  = tbl.getDataByColumns($('#columns').html()).length,
                    rates       = $('#rates').val(),
                    VATRates    = $('#vat_rates').val();

                for (i = 0; i < rowNumeric; i++){
                    var rates_pos       = $('#rates_pos').val(),
                        cell            = tbl.find("tbody tr:eq(" + i + ") td:eq(" + rates_pos + ")").first(),
                        vat_rates_pos   = $('#vat_rates_pos').val();

                    tbl.DataTable().cell(cell).data(rates);                      

                    cell = tbl.find("tbody tr:eq(" + i + ") td:eq(" + vat_rates_pos + ")").first();
                    tbl.DataTable().cell(cell).data(VATRates).draw(false);                      
                }
            }

            if ($('#s_nation').val() && $('#s_city').val() && $('#r_nation').val() && $('#r_city').val()){
                <?php $warehouse_list  = get_data("select * from warehouse order by warehouse_code, warehouse_name"); ?>
                <?php $trf_transport   = get_data("select * from trf_transport order by trf_trs_code, trf_trs_name"); ?>

                var rates, warehouse_id_dep, warehouse_id_des;

                var s_nation    = $('#s_nation').val(),
                    s_city      = $('#s_city').val(),
                    r_nation    = $('#r_nation').attr('attrX'),
                    r_city      = $('#r_city').attr('attrX');


                <?php for ($i = 0; $i < count($warehouse_list); $i++) { ?>
                    if (s_nation == <?="'".$warehouse_list[$i]['nation_id']."'";?> 
                        && s_city == <?="'".$warehouse_list[$i]['city_id']."'";?>){
                        warehouse_id_dep = <?="'".$warehouse_list[$i]['warehouse_id']."'";?>;
                    }
                    else if (r_nation == <?="'".$warehouse_list[$i]['nation_id']."'";?> 
                        && r_city == <?="'".$warehouse_list[$i]['city_id']."'";?>){
                        warehouse_id_des = <?="'".$warehouse_list[$i]['warehouse_id']."'";?>;
                    }               
                <?php } ?>  

                <?php for ($i = 0; $i < count($trf_transport); $i++) { ?>
                    if (warehouse_id_dep == <?="'".$trf_transport[$i]['warehouse_id_dep']."'";?> 
                        && warehouse_id_des == <?="'".$trf_transport[$i]['warehouse_id_des']."'";?>){
                        rates = <?="'".$trf_transport[$i]['air_freight_rates']."'";?>;
                        $('#include_vat').val(parseInt(<?="'".$trf_transport[$i]['include_vat']."'";?>));            
                        $('#include_vat').attr('vat', parseInt(<?="'".$trf_transport[$i]['vat']."'";?>));      
                        $('#rates').val(rates);
                    }
                <?php } ?>

                if (rates){
                    var rowNumeric      = tbl.getDataByColumns($('#columns').html()).length,
                        colIdx          = $('#rates_pos').val(),
                        VATRateColIdx   = $('#include_vat').attr('pos'),
                        VATRates        = $('#include_vat').attr('vat') * parseFloat(rates) / 100;

                    for (i = 0; i < rowNumeric; i++){
                        var cell = tbl.find("tbody tr:eq(" + i + ") td:eq(" + colIdx + ")").first();
                        tbl.DataTable().cell(cell).data(rates).draw(false);                      

                        cell = tbl.find("tbody tr:eq(" + i + ") td:eq(" + VATRateColIdx + ")").first();
                        tbl.DataTable().cell(cell).data(VATRates).draw(false);                      

                    }
                }
            }
        }
    }

    function chooseAddAddress(){
        var iRow            = $('#index').val(),
            addressIdx      = ($('#address_type').val() == 'Address' ? $('#address_idx').val() : parseInt($('#address_idx').val()) + 2),
            cell            = $("#contenttable").find("tbody tr:eq(" + iRow + ") td:eq(" + addressIdx + ")"),
            styleFormatL    = '"font-size: 11px; background-color: transparent; margin-right: 3px; font-style: italic; color: red; font-weight: bold; border: none;"',
            cell_data       = '<button style=' + styleFormatL + ' value="Chỉnh sửa địa chỉ" name="" class="add' + $("#address_type").val() +'"><u>(Chỉnh sửa địa chỉ)</u></button>';

        $('#index').val('');
        if ($('#pac-input').val()){
            cell[0]['_DT_CellIndex'].column = addressIdx;
            $("#contenttable").DataTable().cell(cell).data($('#pac-input').val() + cell_data).draw(false);

            cell[0]['_DT_CellIndex'].column = parseInt(addressIdx) + 1;
            $("#contenttable").DataTable().cell(cell).data($('#pac-input').val()).draw(false);

            var crRow = $("#contenttable").find("tbody tr:eq("+ cell[0]['_DT_CellIndex'].row +")");

            if(!crRow.hasClass("addnew")){
                $("#contenttable").DataTable().row(crRow).nodes().to$().addClass("editing");
            }   
        }
        removeBlurUIBelow();
    }

    //function setDataForCell(tbl, cell, colIdx, value){
    function setDataForCell(cell, cellInfoArr){
        for (i = 0; i < cellInfoArr.length; i++){
            cell[0]['_DT_CellIndex'].column = cellInfoArr[i].colIdx;
            $('#contenttable').DataTable().cell(cell).data(cellInfoArr[i].value).draw(false);
        }
    }
</script>
<script type="text/javascript" src="<?=ROOT_URL?>bms/common/CalendarPopup.js"></script>
<script language="javaScript" id="jscal1x">
    var cal = new CalendarPopup("calendarpopup");
    cal.setTodayText("Hôm nay");
    cal.showNavigationDropdowns();
    cal.setYearSelectStartOffset(20);
    cal.setMonthNames("Tháng 1","Tháng 2","Tháng 3","Tháng 4","Tháng 5","Tháng 6","Tháng 7","Tháng 8","Tháng 9","Tháng 10","Tháng 11","Tháng 12");
    cal.setDayHeaders("CN","T2","T3","T4","T5","T6","T7");
</script>
<script language="javaScript">document.write(getCalendarStyles());</script>
<div id="calendarpopup" style="position:absolute;visibility:hidden;background-color:white;layer-background-color:white;"></DIV>

<div style="background:#f1f3f5;"> 
    <div id="header">
        <div  id="headerwrap">
            <div id="logo" style="text-transform: uppercase;">DỊCH VỤ CHUYỂN PHÁT</div>
            <div id="headbar">
                <?php
                if (@$_SESSION["login"] != "logined") {
                ?>
                <form  method="post" action="?eda_code=<?=md5('login')?>">
                    <div id="loginbox">
                        <div style="width:160px;float:left;">
                            <input onfocus="if(this.value=='Tên đăng nhập') this.value='';" onblur="if(this.value=='') this.value='Tên đăng nhập';" style="color:#666;width:150px;"  type="text" class="textbox"  name="user_name"  value="Tên đăng nhập" tabindex="1"/>
                        </div>
                        <div style="width:160px;float:left;"><input onfocus="if(this.value=='Mật khẩu') this.value='';" onblur="if(this.value=='') this.value='Mật khẩu';" style="color:#666;margin-left:5px;width:150px;" type="password" class="textbox" name="pass"   value="Mật khẩu" tabindex="2"/></div>
                        <div style="width:90px;float:left;margin-left:5px;"><input value="Đăng nhập" id="loginbt" type="submit" /></div>
                        <div class="loginmore">&nbsp; </div>
                    </div>
                </form>
                <?php
                } else {
                    ?>
                    <div id="loginbox" style="padding-top:7px;padding-right:10px;">
                        <div style="width:165px;float:left;padding-top:5px;text-align:left;">Xin chào <strong style="color:yellow"><?=$_SESSION['user_name']?></strong></div>
                        <div style="width:100px;float: right;"><input onclick="window.location='?eda_code=<?=md5('logout')?>';" value="Thoát" id="loginbt" type="button" /></div>
                        <div style="width:100px;float: right;" hidden><input style="<?=$action->eda_act=='help'?'color:yellow;background:#ff6600;':''?>" onclick="window.open('/HDSD-AMS-of-Vĩnh-Khánh.pdf');" value="Hướng dẫn" id="loginbt" type="button" /></div>
                        <div style="width:100px;float: right;"><input style="<?=$action->eda_act=='homepage'?'color:yellow;background:#ff6600;':''?>" onclick="window.open('<?php echo ROOT_URL;?>crm/admin');" value="CRM ADMIN" id="loginbt" type="button" /></div>
                    </div>
                    <?php
                    
                }
                ?>
            </div>
        </div>
    </div>  